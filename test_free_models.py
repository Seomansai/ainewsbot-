#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π OpenRouter
"""

import os
from openai import OpenAI

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass

def test_free_models():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π OpenRouter"""
    
    openrouter_key = os.getenv('OPENROUTER_API_KEY')
    
    if not openrouter_key:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    client = OpenAI(
        api_key=openrouter_key,
        base_url="https://openrouter.ai/api/v1"
    )
    
    # –¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç
    test_text = "Meta's new AI model achieves state-of-the-art performance on benchmark tests while reducing computational costs by 40%"
    
    print("üÜì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π OpenRouter...\n")
    
    # –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏
    free_models = [
        "meta-llama/llama-3.1-8b-instruct:free",
        "microsoft/phi-3-medium-128k-instruct:free", 
        "google/gemma-2-9b-it:free",
        "qwen/qwen-2-7b-instruct:free"
    ]
    
    for model in free_models:
        print(f"üéØ –ú–æ–¥–µ–ª—å: {model}")
        print("=" * 70)
        print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª: {test_text}")
        
        try:
            response = client.chat.completions.create(
                model=model,
                messages=[
                    {
                        "role": "system", 
                        "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤. –ü–µ—Ä–µ–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫, —Å–æ—Ö—Ä–∞–Ω—è—è –≤—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã, –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã –∏ —Å–º—ã—Å–ª. –î–µ–ª–∞–π –ø–µ—Ä–µ–≤–æ–¥ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ —á–∏—Ç–∞–±–µ–ª—å–Ω—ã–º –¥–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –°–æ—Ö—Ä–∞–Ω—è–π —Å—Ç–∏–ª—å –æ—Ä–∏–≥–∏–Ω–∞–ª–∞."
                    },
                    {
                        "role": "user", 
                        "content": f"–ü–µ—Ä–µ–≤–µ–¥–∏ —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–∏–π:\n\n{test_text}"
                    }
                ],
                temperature=0.2,
                max_tokens=1000
            )
            
            translation = response.choices[0].message.content.strip()
            print(f"‚úÖ –ü–µ—Ä–µ–≤–æ–¥: {translation}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            
        print("-" * 70)
        print()

if __name__ == "__main__":
    test_free_models() 