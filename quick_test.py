#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–µ—Ä–µ–≤–æ–¥–∞
"""

import os
from openai import OpenAI

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
try:
    from dotenv import load_dotenv
    load_dotenv()
except ImportError:
    pass

def quick_test():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞"""
    
    openrouter_key = os.getenv('OPENROUTER_API_KEY')
    
    if not openrouter_key:
        print("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    client = OpenAI(
        api_key=openrouter_key,
        base_url="https://openrouter.ai/api/v1"
    )
    
    # –ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–±–ª–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç
    test_text = """Reinforcing seamless AI at scale. Modern AI tools demand unprecedented computational resources."""
    
    print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞...\n")
    print(f"üìù –û—Ä–∏–≥–∏–Ω–∞–ª: {test_text}")
    
    # –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    improved_prompt = """–¢—ã –æ–ø—ã—Ç–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ IT-—Ç–µ–∫—Å—Ç–æ–≤. 

–ü–†–ê–í–ò–õ–ê:
- –ü–µ—Ä–µ–≤–æ–¥–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
- "seamless" = "–∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π/–±–µ—Å—à–æ–≤–Ω—ã–π"  
- "at scale" = "–≤ –º–∞—Å—à—Ç–∞–±–µ/–º–∞—Å—Å–æ–≤–æ"
- "unprecedented" = "–±–µ—Å–ø—Ä–µ—Ü–µ–¥–µ–Ω—Ç–Ω—ã–π/–Ω–µ–≤–∏–¥–∞–Ω–Ω—ã–π"

–ü–µ—Ä–µ–≤–æ–¥–∏ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ."""

    try:
        response = client.chat.completions.create(
            model="meta-llama/llama-3.1-8b-instruct:free",
            messages=[
                {"role": "system", "content": improved_prompt},
                {"role": "user", "content": f"–ü–µ—Ä–µ–≤–µ–¥–∏: {test_text}"}
            ],
            temperature=0.1,
            max_tokens=500
        )
        
        translation = response.choices[0].message.content.strip()
        print(f"‚úÖ –ù–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥: {translation}")
        print()
        print("–°—Ä–∞–≤–Ω–∏ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º:")
        print("‚ùå –°—Ç–∞—Ä—ã–π: '–ü–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –±–µ—Å—à–æ–≤–Ω–æ–π –ò–ò –Ω–∞ –º–∞—Å—à—Ç–∞–±–µ'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    quick_test() 